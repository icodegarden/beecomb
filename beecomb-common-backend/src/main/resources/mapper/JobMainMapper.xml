<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.github.icodegarden.beecomb.common.backend.mapper.JobMainMapper">

	<resultMap id="baseMap" type="io.github.icodegarden.beecomb.common.backend.pojo.persistence.JobMainPO">
		<id property="id" column="id" />
		<result property="uuid" column="uuid" />
		<result property="name" column="name" />
		<result property="type" column="type" />
		<result property="executorName" column="executor_name" />
		<result property="jobHandlerName" column="job_handler_name" />
		<result property="priority" column="priority" />
		<result property="weight" column="weight" />
		<result property="parallel" column="is_parallel" />
		<result property="maxParallelShards" column="max_parallel_shards" />
		<result property="queued" column="is_queued" />
		<result property="queuedAt" column="queued_at" />
		<result property="queuedAtInstance" column="queued_at_instance" />
		<result property="lastTrigAt" column="last_trig_at" />
		<result property="lastExecuteExecutor" column="last_execute_executor" />
		<result property="lastExecuteSuccess" column="is_last_execute_success" />
		<result property="executeTimeout" column="execute_timeout" />
		<result property="nextTrigAt" column="next_trig_at" />
		<result property="end" column="is_end" />
		<result property="createdBy" column="created_by" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>
	
	<resultMap id="DOMap" type="io.github.icodegarden.beecomb.common.backend.pojo.data.JobMainDO" extends="baseMap">
        <association property="jobDetail" columnPrefix="jd_" resultMap="io.github.icodegarden.beecomb.common.backend.mapper.JobDetailMapper.DOMap">
        </association>
        <association property="delayJob" columnPrefix="dj_" resultMap="io.github.icodegarden.beecomb.common.backend.mapper.DelayJobMapper.DOMap">
        </association>
        <association property="scheduleJob" columnPrefix="sj_" resultMap="io.github.icodegarden.beecomb.common.backend.mapper.ScheduleJobMapper.DOMap">
        </association>
	</resultMap>
	
	<resultMap id="countMap" type="io.github.icodegarden.beecomb.common.backend.pojo.data.JobMainCountDO">
		<result property="count" column="count" />
		<result property="type" column="type" />
		<result property="createdBy" column="created_by" />
	</resultMap>

	<insert id="add" parameterType="io.github.icodegarden.beecomb.common.backend.pojo.persistence.JobMainPO" useGeneratedKeys="true" keyProperty="id">
		insert into `job_main` (
		<if test="id != null">`id`,</if>
		<if test="uuid != null">`uuid`,</if>
		<if test="name != null">`name`,</if>
		<if test="type != null">`type`,</if>
		<if test="executorName != null">`executor_name`,</if>
		<if test="jobHandlerName != null">`job_handler_name`,</if>
		<if test="priority != null">`priority`,</if>
		<if test="weight != null">`weight`,</if>
		<if test="parallel != null">`is_parallel`,</if>
		<if test="maxParallelShards != null">`max_parallel_shards`,</if>
		<if test="queued != null">`is_queued`,</if>
		<if test="queuedAt != null">`queued_at`,</if>
		<if test="queuedAtInstance != null">`queued_at_instance`,</if>
		<if test="lastTrigAt != null">`last_trig_at`,</if>
		<if test="lastExecuteExecutor != null">`last_execute_executor`,</if>
		<if test="lastExecuteSuccess != null">`is_last_execute_success`,</if>
		<if test="executeTimeout != null">`execute_timeout`,</if>
		<if test="nextTrigAt != null">`next_trig_at`,</if>
		<if test="end != null">`is_end`,</if>
		<if test="createdAt != null">`created_at`,</if>
		`created_by`
		)
		values (
		<if test="id != null">#{id},</if>
		<if test="uuid != null">#{uuid},</if>
		<if test="name != null">#{name},</if>
		<if test="type != null">#{type},</if>
		<if test="executorName != null">#{executorName},</if>
		<if test="jobHandlerName != null">#{jobHandlerName},</if>
		<if test="priority != null">#{priority},</if>
		<if test="weight != null">#{weight},</if>
		<if test="parallel != null">#{parallel},</if>
		<if test="maxParallelShards != null">#{maxParallelShards},</if>
		<if test="queued != null">#{queued},</if>
		<if test="queuedAt != null">#{queuedAt},</if>
		<if test="queuedAtInstance != null">#{queuedAtInstance},</if>
		<if test="lastTrigAt != null">#{lastTrigAt},</if>
		<if test="lastExecuteExecutor != null">#{lastExecuteExecutor},</if>
		<if test="lastExecuteSuccess != null">#{lastExecuteSuccess},</if>
		<if test="executeTimeout != null">#{executeTimeout},</if>
		<if test="nextTrigAt != null">#{nextTrigAt},</if>
		<if test="end != null">#{end},</if>
		<if test="createdAt != null">#{createdAt},</if>
		#{createdBy}
		)
	</insert>
	
	<sql id="findPrefix">
		select 
			a.`id` as id,
			a.`uuid` as uuid,
			a.`name` as name,
			a.`type` as type,
			a.`executor_name` as executor_name,
			a.`job_handler_name` as job_handler_name,
			a.`priority` as priority,
			a.`weight` as weight,
			a.`is_parallel` as is_parallel,
			a.`max_parallel_shards` as max_parallel_shards,
			a.`is_queued` as is_queued,
			a.`last_trig_at` as last_trig_at,
			a.`execute_timeout` as execute_timeout,
			a.`next_trig_at` as next_trig_at,
			a.`is_end` as is_end,
			a.`is_last_execute_success` as is_last_execute_success
			<if test="with != null">
				<trim prefix="," suffixOverrides=",">
					<if test="with.queuedAt == true">a.`queued_at` as queued_at,</if>
					<if test="with.queuedAtInstance == true">a.`queued_at_instance` as queued_at_instance,</if>
					<if test="with.lastExecuteExecutor == true">a.`last_execute_executor` as last_execute_executor,</if>
					<if test="with.createdBy == true">a.`created_by` as created_by,</if>
					<if test="with.createdAt == true">a.`created_at` as created_at,</if>
					<if test="with.updatedAt == true">a.`updated_at` as updated_at,</if>
				</trim>
				<if test="with.jobDetail != null">
					,b.`job_id` as jd_job_id
					<trim prefix="," suffixOverrides=",">
						<if test="with.jobDetail.params == true">b.`params` as jd_params,</if>
						<if test="with.jobDetail.desc == true">b.`desc` as jd_desc,</if>
						<if test="with.jobDetail.lastTrigResult == true">b.`last_trig_result` as jd_last_trig_result,</if>
						<if test="with.jobDetail.lastExecuteReturns == true">b.`last_execute_returns` as jd_last_execute_returns,</if>
					</trim>
				</if>
				<if test="with.delayJob != null">
					,c.`job_id` as dj_job_id
					<trim prefix="," suffixOverrides=",">
						c.`delay` as dj_delay,
						c.`retry_on_execute_failed` as dj_retry_on_execute_failed,
						c.`retry_backoff_on_execute_failed` as dj_retry_backoff_on_execute_failed,
						c.`retried_times_on_execute_failed` as dj_retried_times_on_execute_failed,
						c.`retry_on_no_qualified` as dj_retry_on_no_qualified,
						c.`retry_backoff_on_no_qualified` as dj_retry_backoff_on_no_qualified,
						c.`retried_times_on_no_qualified` as dj_retried_times_on_no_qualified
					</trim>
				</if>
				<if test="with.scheduleJob != null">
					,d.`job_id` as sj_job_id
					<trim prefix="," suffixOverrides=",">
						d.`schedule_fix_rate` as sj_schedule_fix_rate,
						d.`schedule_fix_delay` as sj_schedule_fix_delay,
						d.`shedule_cron` as sj_shedule_cron,
						d.`scheduled_times` as sj_scheduled_times
					</trim>
				</if>
			</if>
		from 
		`job_main` a
		<if test="with != null">
			<if test="with.jobDetail != null">
				left join `job_detail` b on a.id = b.job_id
			</if>
			<if test="with.delayJob != null">
				left join `delay_job` c on a.id = c.job_id
			</if>
			<if test="with.scheduleJob != null">
				left join `schedule_job` d on a.id = d.job_id
			</if>
		</if>
	</sql>
	
	<sql id="whereSql">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and a.uuid = #{uuid}
			</if>
			<if test="end != null">
				and a.is_end = #{end}
			</if>
			<if test="queued != null">
				and a.is_queued = #{queued}
			</if>
			<if test="createdBy != null">
				and a.created_by = #{createdBy}
			</if>
			<if test="nameLike != null">
				and a.name LIKE CONCAT(#{nameLike},'%')
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="parallel != null">
				and a.is_parallel = #{parallel}
			</if>
			<if test="lastExecuteSuccess != null">
				and a.is_last_execute_success = #{lastExecuteSuccess}
			</if>
			<if test="createdAtGte != null">
				and a.created_at &gt;= #{createdAtGte}
			</if>
			<if test="createdAtLte != null">
				and a.created_at &lt;= #{createdAtLte}
			</if>
			<if test="lastTrigAtGte != null">
				and a.last_trig_at &gt;= #{lastTrigAtGte}
			</if>
			<if test="lastTrigAtLte != null">
				and a.last_trig_at &lt;= #{lastTrigAtLte}
			</if>
			
			<if test="nextTrigAtLt != null">
				and a.next_trig_at &lt; #{nextTrigAtLt}
			</if>
		</trim>
	</sql>
	
	<select id="findAll" parameterType="io.github.icodegarden.beecomb.common.backend.pojo.query.JobMainQuery" resultMap="DOMap">
		<include refid="findPrefix"/>
		<include refid="whereSql"/>
		
		<if test="sort != null">
			${sort}
		</if>
		<if test="limit != null">
			${limit}
		</if>
	</select>
	
	<select id="findAll_COUNT" parameterType="io.github.icodegarden.beecomb.common.backend.pojo.query.JobMainQuery" resultType="Long">
		select 
			count(0) 
		from 
		`job_main` a
		<include refid="whereSql"/>
	</select>
	
	<select id="findOne" resultMap="DOMap">
		<include refid="findPrefix"/>
		where a.id = #{id}
	</select>
	
	<select id="findByUUID" resultMap="DOMap">
		<include refid="findPrefix"/>
		where a.uuid = #{uuid} 
		limit 1
	</select>
	
	<!-- 只能更新非end的任务 -->
	<update id="update" parameterType="io.github.icodegarden.beecomb.common.backend.pojo.persistence.JobMainPO$Update">
		update job_main 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null">`name` = #{name},</if>
			<if test="executorName != null">`executor_name` = #{executorName},</if>
			<if test="jobHandlerName != null">`job_handler_name` = #{jobHandlerName},</if>
			<if test="priority != null">priority = #{priority},</if>
			<if test="weight != null">weight = #{weight},</if>
			<if test="parallel != null">is_parallel = #{parallel},</if>
			<if test="maxParallelShards != null">max_parallel_shards = #{maxParallelShards},</if>
			<if test="queued != null">is_queued = #{queued},</if>
			<if test="queuedAt != null">queued_at = #{queuedAt},</if>
			<if test="queuedAtInstance != null">queued_at_instance = #{queuedAtInstance},</if>
			<if test="lastTrigAt != null">last_trig_at = #{lastTrigAt},</if>
			<if test="lastExecuteExecutor != null">last_execute_executor = #{lastExecuteExecutor},</if>
			<if test="lastExecuteSuccess != null">is_last_execute_success = #{lastExecuteSuccess},</if>
			<if test="executeTimeout != null">execute_timeout = #{executeTimeout},</if>
			<if test="nextTrigAt != null">next_trig_at = #{nextTrigAt},</if>
			<if test="end != null">is_end = #{end},</if>
			<if test="updatedBy != null">updated_by = #{updatedBy},</if>
			<if test="updatedAt != null">updated_at = #{updatedAt},</if>
			<if test="nextTrigAtNull != null and nextTrigAtNull == true">next_trig_at = null,</if>
		</trim>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from job_main where id = #{id}
	</delete>
	
	<!-- next_trig_at超过给定的时间，实际上已不在队列中 -->
	<!-- 尽管这里只使用nextTrigAtLt作为识别条件，会把已经end的任务也进行处理，但这是正确的，end的任务也是实际上noQueued，任务恢复不会把end的任务查出 -->
	<update id="updateToNoQueued">
		update job_main 
		set is_queued = 0, next_trig_at = null
		where next_trig_at &lt; #{nextTrigAtLt}
	</update>
	
	<select id="count" parameterType="io.github.icodegarden.beecomb.common.backend.pojo.query.JobMainCountQuery" resultMap="countMap">
		select 
			count(0) as count
			<if test="groupBy != null">
				<trim prefix="," suffixOverrides=",">
					<if test="groupBy.createdBy == true">created_by,</if>
					<if test="groupBy.type == true">`type`,</if>
				</trim>
			</if>
		from 
		`job_main` a
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="end != null">
				and a.is_end = #{end}
			</if>
			<if test="queued != null">
				and a.is_queued = #{queued}
			</if>
			<if test="lastExecuteSuccess != null">
				and a.is_last_execute_success = #{lastExecuteSuccess}
			</if>
		</trim>
		<if test="groupBy != null">
			<trim prefix="group by" prefixOverrides=",">
				<if test="groupBy.createdBy == true">
					,created_by
				</if>
				<if test="groupBy.type == true">
					,`type`
				</if>
			</trim>
		</if>
	</select>
</mapper>