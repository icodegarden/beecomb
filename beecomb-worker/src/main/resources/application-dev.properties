# 配置真实数据源
spring.shardingsphere.datasource.names=ds0,ds1

#以下数据源支持hikari的配置，如有需要可以自行配置
# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://172.22.122.23:53306/beecomb_0?setUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://172.22.122.23:53306/beecomb_1?setUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456



# 标准分片表配置
spring.shardingsphere.rules.sharding.tables.job_main.actual-data-nodes=ds$->{0..1}.job_main
spring.shardingsphere.rules.sharding.tables.job_main.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.job_main.database-strategy.standard.sharding-algorithm-name=idrangemod
spring.shardingsphere.rules.sharding.tables.job_main.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.job_main.key-generate-strategy.key-generator-name=mysqljobmain

spring.shardingsphere.rules.sharding.tables.job_detail.actual-data-nodes=ds$->{0..1}.job_detail
spring.shardingsphere.rules.sharding.tables.job_detail.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.job_detail.database-strategy.standard.sharding-algorithm-name=idrangemod

spring.shardingsphere.rules.sharding.tables.delay_job.actual-data-nodes=ds$->{0..1}.delay_job
spring.shardingsphere.rules.sharding.tables.delay_job.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.delay_job.database-strategy.standard.sharding-algorithm-name=idrangemod

spring.shardingsphere.rules.sharding.tables.schedule_job.actual-data-nodes=ds$->{0..1}.schedule_job
spring.shardingsphere.rules.sharding.tables.schedule_job.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.schedule_job.database-strategy.standard.sharding-algorithm-name=idrangemod

spring.shardingsphere.rules.sharding.tables.job_execute_record.actual-data-nodes=ds$->{0..1}.job_execute_record
spring.shardingsphere.rules.sharding.tables.job_execute_record.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.job_execute_record.database-strategy.standard.sharding-algorithm-name=idrangemod
spring.shardingsphere.rules.sharding.tables.job_execute_record.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.job_execute_record.key-generate-strategy.key-generator-name=mysqljobexecuterrecord

spring.shardingsphere.rules.sharding.tables.job_recovery_record.actual-data-nodes=ds$->{0..1}.job_recovery_record
spring.shardingsphere.rules.sharding.tables.job_recovery_record.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.job_recovery_record.database-strategy.standard.sharding-algorithm-name=idrangemod


#绑定表
spring.shardingsphere.rules.sharding.binding-tables[0]=job_main,job_detail,delay_job,schedule_job,job_execute_record,job_recovery_record

#默认规则 暂不需要，因为sharding默认使用的是 none不分片规则 ，他会选取第一个ds
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=firstds


# 分片算法配置      坑: <sharding-algorithm-name> 名字必须小写并且不能带 下划线
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.type=CLASS_BASED
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.strategy=standard
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.algorithmClassName=io.github.icodegarden.commons.shardingsphere.springboot.RangeModShardingAlgorithm
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.name=idrangemod
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups[0].name=group0
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups[0].rangeGte=0
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups[0].rangeLt=20000000
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups[0].mod=2
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups[0].modLoadBalance={"ds0":[0],"ds1":[1]}


spring.shardingsphere.rules.sharding.sharding-algorithms.firstds.type=CLASS_BASED
spring.shardingsphere.rules.sharding.sharding-algorithms.firstds.props.strategy=standard
spring.shardingsphere.rules.sharding.sharding-algorithms.firstds.props.algorithmClassName=io.github.icodegarden.commons.shardingsphere.springboot.FirstDataSourceShardingAlgorithm


#spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline.props.algorithm-expression=ds$->{id % 2} 
#
#spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline2.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline2.props.algorithm-expression=ds$->{job_id % 2} 

# 分布式序列算法配置 ， 用户可以先主动赋值id，这样sharding就不会再使用生成策略来赋值，方便用户的业务
#spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#spring.shardingsphere.rules.sharding.key-generators.snowflake.props.xxx=
spring.shardingsphere.rules.sharding.key-generators.mysqljobmain.type=MYSQL
spring.shardingsphere.rules.sharding.key-generators.mysqljobmain.props.moduleName=job_main
spring.shardingsphere.rules.sharding.key-generators.mysqljobexecuterrecord.type=MYSQL
spring.shardingsphere.rules.sharding.key-generators.mysqljobexecuterrecord.props.moduleName=job_execute_record

#sql-show=true
