# 配置真实数据源
spring.shardingsphere.datasource.names=ds0,ds1

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://172.22.122.23:53306/beecomb_0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://172.22.122.23:53306/beecomb_1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456



# 标准分片表配置
spring.shardingsphere.rules.sharding.tables.job_main.actual-data-nodes=ds$->{0..1}.job_main
spring.shardingsphere.rules.sharding.tables.job_main.database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.job_main.database-strategy.standard.sharding-algorithm-name=dsinline
spring.shardingsphere.rules.sharding.tables.job_main.database-strategy.standard.sharding-algorithm-name=idrangemod
#spring.shardingsphere.rules.sharding.tables.job_main.table-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.job_main.table-strategy.standard.sharding-algorithm-name=jobmaintableinline
#spring.shardingsphere.rules.sharding.tables.job_main.table-strategy.standard.sharding-algorithm-name=idrangemod
spring.shardingsphere.rules.sharding.tables.job_main.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.job_main.key-generate-strategy.key-generator-name=mysqljobmain

spring.shardingsphere.rules.sharding.tables.job_detail.actual-data-nodes=ds$->{0..1}.job_detail
spring.shardingsphere.rules.sharding.tables.job_detail.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.job_detail.database-strategy.standard.sharding-algorithm-name=idrangemod

spring.shardingsphere.rules.sharding.tables.delay_job.actual-data-nodes=ds$->{0..1}.delay_job
spring.shardingsphere.rules.sharding.tables.delay_job.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.delay_job.database-strategy.standard.sharding-algorithm-name=idrangemod

spring.shardingsphere.rules.sharding.tables.schedule_job.actual-data-nodes=ds$->{0..1}.schedule_job
spring.shardingsphere.rules.sharding.tables.schedule_job.database-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.schedule_job.database-strategy.standard.sharding-algorithm-name=idrangemod



# 分片算法配置      坑: <sharding-algorithm-name> 名字必须小写并且不能带 下划线
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.type=CLASS_BASED
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.strategy=standard
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.algorithmClassName=io.github.icodegarden.beecomb.master.shardingsphere.RangeModShardingAlgorithm
#spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups.group0.rangeGte=0
#spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups.group0.rangeLt=4000000
#spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups.group0.mod=5
#spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups.group0.modLoadBalance={"ds0":[0,1],"ds1":[2],"ds2":[3,4]}
spring.shardingsphere.rules.sharding.sharding-algorithms.idrangemod.props.groups=[{"name":"group0","rangeGte":0,"rangeLt":2000,"mod":2,"modLoadBalance":{"ds0":[0],"ds1":[1]}}]

spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline.props.algorithm-expression=ds$->{id % 2} 

spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline2.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.dsinline2.props.algorithm-expression=ds$->{job_id % 2} 

# 分布式序列算法配置
#spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#spring.shardingsphere.rules.sharding.key-generators.snowflake.props.xxx=
spring.shardingsphere.rules.sharding.key-generators.mysqljobmain.type=MYSQL
spring.shardingsphere.rules.sharding.key-generators.mysqljobmain.props.moduleName=job_main

